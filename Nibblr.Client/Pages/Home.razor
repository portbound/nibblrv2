@page "/"
@inject HttpClient Client
@inject NavigationManager Navigation
@using static Microsoft.AspNetCore.Components.Web.RenderMode
@using Shared.Contracts.Responses
@rendermode InteractiveWebAssembly

@if (!_recipes.Any()) {
    <div>Loading...</div>
} else {
    <MudTextField @bind-Value="_searchString" Placeholder="Search" Adornment="Adornment.Start" Immediate="true"
                  AdornmentIcon="@Icons.Material.Filled.Search" IconSize="Size.Medium" Class="mt-2"></MudTextField>
    <MudGrid Class="mt-2">
        @foreach (RecipeResponse recipe in _recipes) {
            <MudItem xs="12" md="4" lg="3" xl="2">
                <MudCard Class="ma-2" Elevation="10">
                    <MudCardHeader>
                        <CardHeaderContent>
                            <MudText Typo="Typo.h6">@recipe.Name</MudText>
                        </CardHeaderContent>
                    </MudCardHeader>
                    <MudCardContent>
                        <MudText Typo="Typo.subtitle2">@recipe.Description</MudText>
                    </MudCardContent>
                    <MudCardActions>
                        <MudIcon Icon="@Icons.Material.Filled.Bookmark" Color="@(recipe.Bookmarked ? Color.Warning : Color.Transparent)"/>
                        <MudSpacer/>
                        <MudIconButton Icon="@Icons.Material.Filled.OpenInNew" Color="Color.Info" @onclick="() => NavigateToRecipeView(recipe.ID)"/>
                    </MudCardActions>
                </MudCard>
            </MudItem>
        }
    </MudGrid>
}

@code {
    List<RecipeResponse>? _recipes = [];
    private string _searchString;


    protected override async Task OnInitializedAsync() {
        RecipesResponse response = await Client.GetFromJsonAsync<RecipesResponse>("/api/recipes");
        _recipes = response.Items.OrderByDescending(x => x.Bookmarked).ThenBy(x => x.Name).ToList();
    }

    private void NavigateToRecipeView(int id) {
        Navigation.NavigateTo($"RecipeView/{id}");    
    }
}